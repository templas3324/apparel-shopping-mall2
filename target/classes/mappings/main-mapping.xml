<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Main">
	<select id="getAdminIdPw" resultType="mainVO">
	<![CDATA[
		SELECT MEMBER_ID 	as memberId, 
			   MEMBER_PASS	as memberPass,
			   MEMBER_NUM	as memberNum
		FROM MEMBERS
		WHERE MEMBER_NUM = 0
	]]>
	</select>
	
	<select id="getAdminInfo" resultType="mainVO">
	<![CDATA[
		SELECT 
			MEMBER_ID 	as memberId,
			MEMBER_NAME	as memberName,
			MEMBER_NUM	as memberNum
		FROM MEMBERS
		WHERE MEMBER_ID = #{memberId}
	]]>
	</select>
	
	<select id="getMemberAgeStatics" resultType="mainVO">
	<![CDATA[
		SELECT
		    (   SELECT COUNT(*) 
		        FROM MEMBERS 
		        WHERE 1=1 
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) < 20
		    ) AS teen,
		    (   SELECT COUNT(*) 
		        FROM MEMBERS 
		        WHERE 1=1 
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) < 30
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) >= 20
		    ) AS twenty,
		    (   SELECT COUNT(*) 
		        FROM MEMBERS 
		        WHERE 1=1 
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) < 40
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) >= 30
		    ) AS thirty,
		     (   SELECT COUNT(*) 
		        FROM MEMBERS 
		        WHERE 1=1 
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) < 50
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) >= 40
		    ) AS fourty,
		    (   SELECT COUNT(*) 
		        FROM MEMBERS 
		        WHERE 1=1 
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) < 60
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) >= 50
		    ) AS fifty,
		     (   SELECT COUNT(*) 
		        FROM MEMBERS 
		        WHERE 1=1 
		        AND (MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(MEMBER_BIRTH,'YYYYMMDD'),'YEAR'))/12 +1) >= 60 
		        AND MEMBER_NUM != 0
		    ) AS ANOTHER
		FROM DUAL
	]]>
	</select>
	
	<select id="getSiteStatics" resultType="mainVO">
	<![CDATA[
		SELECT
		    (SELECT COUNT(*)  FROM MEMBERS  WHERE 1=1   AND MEMBER_NUM != 0) AS totalMemberCount,
		    (SELECT COUNT(*)  FROM TRANSACTIONS WHERE 1=1 AND TO_CHAR(DEPOSIT_DATE,'YYYYMMDD') = TO_CHAR(SYSDATE-1,'YYYYMMDD')) AS yesterdaySell,
		    (SELECT COUNT(*)  FROM TRANSACTIONS WHERE 1=1 AND DEPOSIT_DATE IS NOT NULL) AS totalSell,
		    NVL((SELECT SUM(PAYMENT)  FROM TRANSACTIONS WHERE 1=1 AND TO_CHAR(DEPOSIT_DATE,'YYYYMMDD') = TO_CHAR(SYSDATE-1,'YYYYMMDD')),0) AS yesterdaySellPrice,
		    NVL((SELECT SUM(PAYMENT)  FROM TRANSACTIONS WHERE 1=1 AND DEPOSIT_DATE IS NOT NULL),0) AS totalSellPrice,
		    (CASE WHEN 
		    	(SELECT (NVL(SUM(PAYMENT), 0))
    			 FROM TRANSACTIONS
    			 WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1))AND TRANSACTION_STATUS = 'Y') = 0 
    		THEN '전월매출이 없습니다.'
    		ELSE 
    			CONCAT(TO_CHAR(ROUND(((SELECT (NVL(SUM(PAYMENT), 0))
                				FROM TRANSACTIONS
                				WHERE (DEPOSIT_DATE <= LAST_DAY(SYSDATE) AND DEPOSIT_DATE >= TRUNC(SYSDATE, 'MM'))AND TRANSACTION_STATUS = 'Y')/ 
                				(SELECT (NVL(SUM(PAYMENT), 0))
                				FROM TRANSACTIONS
                				WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1))
                				AND TRANSACTION_STATUS = 'Y'))*100,1)),'%')
    		END) AS comparedToPreviousMonth
		FROM DUAL
	]]>
	</select>
	
	<select id="getSellStatics" resultType="mainVO">
	<![CDATA[
		SELECT
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(SYSDATE) AND DEPOSIT_DATE >= TRUNC(SYSDATE, 'MM'))
		    AND TRANSACTION_STATUS = 'Y') AS thisMonth,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1))
		    AND TRANSACTION_STATUS = 'Y') AS month1,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -2)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -2))
		    AND TRANSACTION_STATUS = 'Y') AS month2,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -3)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -3))
		    AND TRANSACTION_STATUS = 'Y') AS month3,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -4)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -4))
		    AND TRANSACTION_STATUS = 'Y') AS month4,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -5)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -5))
		    AND TRANSACTION_STATUS = 'Y') AS month5,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -6)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -6))
		    AND TRANSACTION_STATUS = 'Y') AS month6,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -7)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -7))
		    AND TRANSACTION_STATUS = 'Y') AS month7,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -8)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -8))
		    AND TRANSACTION_STATUS = 'Y') AS month8,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -9)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -9))
		    AND TRANSACTION_STATUS = 'Y') AS month9,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -10)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -10))
		    AND TRANSACTION_STATUS = 'Y') AS month10,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -11)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -11))
		    AND TRANSACTION_STATUS = 'Y') AS month11,
		    (SELECT (NVL(SUM(PAYMENT), 0))
		    FROM TRANSACTIONS
		    WHERE (DEPOSIT_DATE <= LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -12)) AND DEPOSIT_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -12))
		    AND TRANSACTION_STATUS = 'Y') AS month12,
    		EXTRACT(MONTH FROM SYSDATE) AS thisMonthName
		FROM DUAL
	]]>
	</select>
	
</mapper>